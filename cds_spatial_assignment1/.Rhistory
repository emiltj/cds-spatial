primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
dkmap
rcmap <- leaflet() %>%   # assign the base location to an object
setView( lng = -33.6687271, lat = 149.9565468, zoom = 8 ) %>%
addProviderTiles("Esri.WorldPhysical", group = "Physical") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("MtbMap", group = "Geo") %>%
addLayersControl(baseGroups = c("Geo","Aerial", "Physical"),
options = layersControlOptions(collapsed = T)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rcmap <- leaflet() %>%   # assign the base location to an object
setView( lng = -33.6687271, lat = 149.9565468, zoom = 8 ) %>%
addProviderTiles("Esri.WorldPhysical", group = "Physical") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("MtbMap", group = "Geo") %>%
addLayersControl(baseGroups = c("Geo","Aerial", "Physical"),
options = layersControlOptions(collapsed = T)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rcmap
rcmap
rcmap <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
addProviderTiles("Esri.WorldPhysical", group = "Physical") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("MtbMap", group = "Geo") %>%
addLayersControl(baseGroups = c("Geo","Aerial", "Physical"),
options = layersControlOptions(collapsed = T)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rcmap <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
addProviderTiles("Esri.WorldPhysical", group = "Physical") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("MtbMap", group = "Geo") %>%
addLayersControl(baseGroups = c("Geo","Aerial", "Physical"),
options = layersControlOptions(collapsed = T)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rcmap
?addProviderTiles()
library(pacman)
p_load(leaflet, htmltools, htmlwidgets, tidyverse, googlesheets4)
setwd("C:/Users/Lenovo/Desktop/Diverse dokumenter/Cognitive Science/cultural_data_science/spatial_analytics/cds_spatial_analytics_assignment1")
rc_feature <- read.csv("RCFeature.csv")
head(rc_feature)
?addProviderTiles()
rcmap <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
addProviderTiles(" Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("  Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Geo","Aerial", "Physical"),
options = layersControlOptions(collapsed = T)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rcmap
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
#addProviderTiles(" Esri.WorldTopoMap", group = "Topography") %>%
#addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("  Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
#addProviderTiles(" Esri.WorldTopoMap", group = "Topography") %>%
#addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("  Esri.WorldStreetMap", group = "Street") %>%
#addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
#options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
library(pacman)
p_load(leaflet, htmltools, htmlwidgets, tidyverse, googlesheets4)
setwd("C:/Users/Lenovo/Desktop/Diverse dokumenter/Cognitive Science/cultural_data_science/spatial_analytics/cds_spatial_analytics_assignment1")
rc_feature <- read.csv("RCFeature.csv")
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
#addProviderTiles(" Esri.WorldTopoMap", group = "Topography") %>%
#addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("  Esri.WorldStreetMap", group = "Street") %>%
#addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
#options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_feature <- read.csv("RCFeature.csv")
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
addProviderTiles(" Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("  Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 8 ) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =149.9565468, lat = -33.6687271, zoom = 10) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =150.322338, lat = -33.740485, zoom = 10) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =150.322338, lat = -33.740485, zoom = 15) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =150.322338, lat = -33.740485, zoom = 13) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =150.293129, lat = -33.758719, zoom = 13) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =150.293129, lat = -33.758719, zoom = 16) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
library(pacman)
p_load(leaflet, htmltools, htmlwidgets, tidyverse, googlesheets4)
setwd("C:/Users/Lenovo/Desktop/Diverse dokumenter/Cognitive Science/cultural_data_science/spatial_analytics/cds_spatial_analytics_assignment1")
rc_feature <- read.csv("RCFeature.csv")
rc_map <- leaflet() %>%   # assign the base location to an object
setView( lng =150.293129, lat = -33.758719, zoom = 16) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography") %>%
addProviderTiles("Esri.WorldImagery", group = "Aerial") %>%
addProviderTiles("Esri.WorldStreetMap", group = "Street") %>%
addLayersControl(baseGroups = c("Topography","Aerial", "Street"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap(toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright") %>%
addMarkers(lng = rc_feature$Longitude,
lat = rc_feature$Latitude,
popup = rc_feature$Description)
rc_map
# Writing the map as a .html file
saveWidget(rc_map, "rc_map.html", selfcontained = TRUE)
